basically it is based on component modelling in short for front hand.
looks something like this:-
class Square extends React.Component {
  render() {
    return (
      <h1>
	Its a Square
	</h1>
    );
  }
}
there are two main methods of a React.Component :-
render() which returns a react type object. the syntax we saw above is strange. It is neither string or HTML. Its called JSX.
ReactDOM.render(
  element,
  document.getElementById('root')
);
where element is our react element and here root is the id of element inside which we wwant to append our component.
We call ReactDOM.render() with the <Welcome name="Sara" /> element.
React calls the Welcome component with {name: 'Sara'} as the props.
Our Welcome component returns a <h1>Hello, Sara</h1> element as the result.
React DOM efficiently updates the DOM to match <h1>Hello, Sara</h1>.

Note: Always start component names with a capital letter.

React treats components starting with lowercase letters as DOM tags. For example, <div /> represents an HTML div tag, but <Welcome /> represents a component and requires Welcome to be in scope

We recommend naming props from the component’s own point of view rather than the context in which it is being used.

function sum(a, b) {
  return a + b;
}

Such functions are called “pure” because they do not attempt to change their inputs, and always return the same result for the same inputs.

All React components must act like pure functions with respect to their props.